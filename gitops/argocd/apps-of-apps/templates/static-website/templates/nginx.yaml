apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-static-content-{{.Values.name}}
data:
  # The static HTML file. Its content will include a random number generated by JavaScript.
  index-static.html: |
    <!DOCTYPE html>
    <html lang="en">
    <head>
      <meta charset="UTF-8">
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <title>Random Static Page</title>
      <style>
        body {
          font-family: 'Inter', sans-serif;
          display: flex;
          justify-content: center;
          align-items: center;
          min-height: 100vh;
          margin: 0;
          background-color: #f0f2f5;
          color: #333;
        }
        .container {
          background-color: #ffffff;
          padding: 40px;
          border-radius: 12px;
          box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
          text-align: center;
          max-width: 600px;
          width: 90%;
        }
        h1 {
          color: #2c3e50;
          margin-bottom: 20px;
        }
        p {
          font-size: 1.1em;
          line-height: 1.6;
          color: #555;
        }
        #randomNumber {
          font-size: 2em;
          font-weight: bold;
          color: #e74c3c;
          margin-top: 20px;
        }
        .footer {
          margin-top: 30px;
          font-size: 0.9em;
          color: #777;
        }
      </style>
    </head>
    <body>
      <div class="container">
        <h1>Hello from Nginx!</h1>
        <p>This is a static HTML page served by Nginx inside a Kubernetes pod.</p>
        <p>The name of the app is: {{.Values.name}}</p>
        <div class="footer">
          Page loaded on: <span id="loadTime"></span>
        </div>
      </div>
    </body>
    </html>
  nginx.conf: |
    server {
        listen 80;
        location / {
            root /usr/share/nginx/html;
            # Nginx will look for the specific static index file
            index index-static.html;
            try_files $uri $uri/ =404;
        }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-static-deployment-{{.Values.name}}
  labels:
    app: nginx-static-{{.Values.name}}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx-static-{{.Values.name}}
  template:
    metadata:
      labels:
        app: nginx-static-{{.Values.name}}
    spec:
      containers:
        - name: nginx
          image: nginx:latest
          ports:
            - containerPort: 80
          volumeMounts:
            - name: static-content-volume
              mountPath: /etc/nginx/conf.d/
            - name: static-html-volume
              mountPath: /usr/share/nginx/html/
      volumes:
        - name: static-content-volume
          configMap:
            name: nginx-static-content-{{.Values.name}}
            items:
              - key: nginx.conf
                path: nginx.conf
        - name: static-html-volume
          configMap:
            name: nginx-static-content-{{.Values.name}}
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-static-service-{{.Values.name}}
  labels:
    app: nginx-static-{{.Values.name}}
spec:
  selector:
    app: nginx-static-{{.Values.name}}
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  type: ClusterIP
